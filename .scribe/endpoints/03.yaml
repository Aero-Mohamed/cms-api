name: Attributes
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/attributes
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all Attributes'
      description: 'Returns a list of all attributes.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "status_code": 200,
            "message": null,
            "data": [
              {
                "id": 1,
                "name": "Title",
                "slug": "title",
                "data_type": "string",
                "is_required": true,
                "is_unique": true,
                "default_value": null,
                "created_at": "2025-07-25T15:00:00.000000Z",
                "updated_at": "2025-07-25T15:00:00.000000Z"
              }
            ],
            "errors": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/attributes
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create an Attribute'
      description: 'This endpoint allows creating a new attribute.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the attribute.'
        required: true
        example: Title
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the attribute.'
        required: true
        example: title
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      data_type:
        name: data_type
        description: 'The data type of the attribute.'
        required: true
        example: string
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_required:
        name: is_required
        description: 'Whether the attribute is required.'
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_unique:
        name: is_unique
        description: 'Whether the attribute is unique.'
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      default_value:
        name: default_value
        description: 'The default value of the attribute.'
        required: false
        example: 'Default Title'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Title
      slug: title
      data_type: string
      is_required: true
      is_unique: true
      default_value: 'Default Title'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "status_code": 201,
            "message": "Attribute created successfully",
            "data": {
              "id": 1,
              "name": "Title",
              "slug": "title",
              "data_type": "string",
              "is_required": true,
              "is_unique": true,
              "default_value": null,
              "created_at": "2025-07-25T15:00:00.000000Z",
              "updated_at": "2025-07-25T15:00:00.000000Z"
            },
            "errors": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/attributes/{id}'
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show attribute'
      description: 'This endpoint allows to get a specific attribute by id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the attribute.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "status_code": 200,
            "message": null,
            "data": {
              "id": 1,
              "name": "Title",
              "slug": "title",
              "data_type": "string",
              "is_required": true,
              "is_unique": true,
              "default_value": null,
              "created_at": "2025-07-25T15:00:00.000000Z",
              "updated_at": "2025-07-25T15:00:00.000000Z"
            },
            "errors": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/attributes/{id}'
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Attribute'
      description: "This endpoint allows updating an attribute's information."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the attribute.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the attribute.'
        required: false
        example: 'Updated Title'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the attribute.'
        required: false
        example: updated-title
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      data_type:
        name: data_type
        description: 'The data type of the attribute options are: string, integer, float, boolean, date.'
        required: false
        example: string
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_required:
        name: is_required
        description: 'Whether the attribute is required.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_unique:
        name: is_unique
        description: 'Whether the attribute is unique.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      default_value:
        name: default_value
        description: 'The default value of the attribute.'
        required: false
        example: 'Default Title'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Updated Title'
      slug: updated-title
      data_type: string
      is_required: true
      is_unique: true
      default_value: 'Default Title'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "status_code": 200,
            "message": "Attribute updated successfully",
            "data": {
              "id": 1,
              "name": "Updated Title",
              "slug": "updated-title",
              "data_type": "string",
              "is_required": true,
              "is_unique": true,
              "default_value": null,
              "created_at": "2025-07-25T15:00:00.000000Z",
              "updated_at": "2025-07-26T13:45:00.000000Z"
            },
            "errors": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/attributes/{id}'
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete attribute'
      description: 'This endpoint allows to delete a specific attribute by id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the attribute.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "status_code": 200,
            "message": "Attribute deleted successfully",
            "data": null,
            "errors": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/entities/{entity_id}/attributes'
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Entity Attributes'
      description: 'Returns a list of attributes associated with a specific entity.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      entity_id:
        name: entity_id
        description: 'The ID of the entity.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      entity_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "status_code": 200,
            "message": null,
            "data": [
              {
                "id": 1,
                "name": "Title",
                "slug": "title",
                "data_type": "string",
                "is_required": true,
                "is_unique": true,
                "default_value": null,
                "created_at": "2025-07-25T15:00:00.000000Z",
                "updated_at": "2025-07-25T15:00:00.000000Z"
              }
            ],
            "errors": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/attributes/attach
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Attach Attribute to Entity'
      description: 'This endpoint allows to attach an attribute to an entity.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      attribute_id:
        name: attribute_id
        description: 'The ID of the attribute.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      entity_id:
        name: entity_id
        description: 'The ID of the entity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      attribute_id: 1
      entity_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "status_code": 200,
            "message": "Attribute attached to entity successfully",
            "data": null,
            "errors": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "success": false,
            "status_code": 400,
            "message": "Attribute is already attached to this entity",
            "data": null,
            "errors": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/attributes/detach
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Detach Attribute from Entity'
      description: 'This endpoint allows to detach an attribute from an entity.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      attribute_id:
        name: attribute_id
        description: 'The ID of the attribute.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      entity_id:
        name: entity_id
        description: 'The ID of the entity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      attribute_id: 1
      entity_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "status_code": 200,
            "message": "Attribute detached from entity successfully",
            "data": null,
            "errors": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "success": false,
            "status_code": 400,
            "message": "Attribute is not attached to this entity",
            "data": null,
            "errors": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
