name: 'Entity Content Management'
description: |-

  APIs for managing entity records
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/content/{entitySlug}'
    metadata:
      groupName: 'Entity Content Management'
      groupDescription: |-

        APIs for managing entity records
      subgroup: ''
      subgroupDescription: ''
      title: 'List Entity Records'
      description: 'Returns a paginated list of records for the specified entity type.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      entitySlug:
        name: entitySlug
        description: 'The slug of the entity to list records from.'
        required: true
        example: article
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      entitySlug: article
    queryParameters:
      page:
        name: page
        description: 'Page number for pagination. Default: 1'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of records per page. Default: 15'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 17
      per_page: 17
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "title": "Example Title",
                "content": "Example content",
                "created_at": "2023-01-01T00:00:00.000000Z",
                "updated_at": "2023-01-01T00:00:00.000000Z"
              }
            ],
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 1,
              "per_page": 15,
              "to": 1,
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Entity with slug 'invalid-slug' not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/content/{entitySlug}'
    metadata:
      groupName: 'Entity Content Management'
      groupDescription: |-

        APIs for managing entity records
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Entity Record'
      description: 'Creates a new record for the specified entity type.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      entitySlug:
        name: entitySlug
        description: 'The slug of the entity to create a record for.'
        required: true
        example: article
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      entitySlug: article
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Record created successfully",
            "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Entity with slug 'invalid-slug' not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Validation failed",
            "errors": {
              "title": ["The title field is required."],
              "content": ["The content field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/content/{entitySlug}/{recordId}'
    metadata:
      groupName: 'Entity Content Management'
      groupDescription: |-

        APIs for managing entity records
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Entity Record with Relations'
      description: 'Retrieves a record for the specified entity type with all its attributes and relations.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      entitySlug:
        name: entitySlug
        description: 'The slug of the entity to retrieve a record from.'
        required: true
        example: article
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      recordId:
        name: recordId
        description: 'The ID of the record to retrieve.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      entitySlug: article
      recordId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Entity with slug 'invalid-slug' not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Record not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
